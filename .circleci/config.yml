# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
aliases:
  - &filter_tag_staging
    tags:
      only: /v0\.[0-9]+\.[0-9]+_[a-zA-Z0-9]+$/
    branches:
      ignore: /.*/
  - &filter_tag_prod
    tags:
      only: /v0\.[0-9]+\.[0-9]+$/
    branches:
      ignore: /.*/

defaults: &defaults
  docker:
    - image: circleci/node:10.12
  working_directory: ~/repo

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Update yarn
          command: "sudo npm install -g yarn@latest"
      - restore_cache:
          key: app-node-cache-{{ checksum "learn/ReactNativeTS/FluTrack/package.json" }}
      - restore_cache:
          key: server-node-cache-{{ checksum "learn/NodeJSWebService/package.json" }}
      - run:
          name: App Yarn Install
          command: |
            cd learn/ReactNativeTS/FluTrack
            yarn install
      - run:
          name: App Tests
          command: |
            cd learn/ReactNativeTS/FluTrack
            yarn test
      - run:
          name: Server Yarn Install
          command: |
            cd learn/NodeJSWebService
            yarn install
      - run:
          name: Server Tests
          command: |
            cd learn/NodeJSWebService
            yarn setup
            yarn test
      - save_cache:
          key: app-node-cache-{{ checksum "learn/ReactNativeTS/FluTrack/package.json" }}
          paths:
            - learn/ReactNativeTS/FluTrack/node_modules
      - save_cache:
          key: server-node-cache-{{ checksum "learn/NodeJSWebService/package.json" }}
          paths:
            - learn/NodeJSWebService/node_modules
      - run:
          name: Generate Build Info
          command: |
            scripts/generate-build-info

  publish: &publish
    <<: *defaults
    steps:
      - checkout
      - run:
          name: App Yarn Install
          command: |
            cd learn/ReactNativeTS/FluTrack
            yarn install
      - run:
          name: Publish to Expo
          command: |
            yarn global add expo-cli
            export PATH="$PATH:$(yarn global bin)"
            cd learn/ReactNativeTS/FluTrack
            expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
            expo publish --non-interactive --release-channel $EXPO_RELEASE_CHANNEL
            export EXPO_APPNAME=`cat app.json | python -c "import sys, json; print(json.load(sys.stdin)['expo']['name'])"`
            export EXPO_URL="https://exp.host/@$EXPO_USERNAME/$EXPO_APPNAME?release-channel=$EXPO_RELEASE_CHANNEL"
            curl -X POST --data-urlencode "payload={\"username\": \"circlebot\", \"text\": \"New $EXPO_RELEASE_CHANNEL build has been published to <$EXPO_URL>.\", \"icon_emoji\": \":hatching_chick:\"}" $SLACK_WEBHOOK

  publish_to_expo_staging:
    environment:
      EXPO_RELEASE_CHANNEL: v0_staging
    <<: *publish

  publish_to_expo_prod:
    environment:
      EXPO_RELEASE_CHANNEL: v0_prod
    <<: *publish

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish_to_expo_staging:
          requires:
            - build
          filters: *filter_tag_staging
      - publish_to_expo_prod:
          requires:
            - build
          filters: *filter_tag_prod
