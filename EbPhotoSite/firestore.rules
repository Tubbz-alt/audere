service cloud.firestore {
  match /databases/{database}/documents {
    function hasRole(role) {
      return
        exists(/databases/$(database)/documents/roles/$(role))
        && request.auth.uid in get(/databases/$(database)/documents/roles/$(role)).data.users;
    }

    function isLoggedIn() {
      return request.auth != null && request.auth.uid != null;
    }

    function matchesDocumentId(rsc, doc) {
      return rsc.data.docId == doc;
    }

    match /{document=**} {
      allow read, write: if isLoggedIn() && hasRole('admin');
    }

    match /encounters/{document} {
      function isSelfAssigned(rsc) {
        return rsc.data.encounter.healthWorker.uid == request.auth.uid;
      }

      allow create: if isLoggedIn()
        && matchesDocumentId(request.resource, document)
        && isSelfAssigned(request.resource);

      allow update: if isLoggedIn()
        && matchesDocumentId(request.resource, document)
        && isSelfAssigned(resource)
        && isSelfAssigned(request.resource);

      allow read: if isLoggedIn()
        && matchesDocumentId(resource, document)
        && isSelfAssigned(resource);
    }

    match /messaging_tokens/{document} {
      function isSelfAssigned(rsc) {
        return rsc.data.uid == request.auth.uid;
      }

      allow create: if isLoggedIn()
        && document == request.auth.uid
        && isSelfAssigned(request.resource);

      allow update: if isLoggedIn()
        && document == request.auth.uid
        && isSelfAssigned(resource)
        && isSelfAssigned(request.resource);

      allow read: if isLoggedIn()
        && document == request.auth.uid
        && isSelfAssigned(resource);
    }

    match /triages/{document} {
      function encounterExists() {
        return exists(/databases/$(database)/documents/encounters/$(document));
      }

      function isSelfAssigned() {
        return
          get(/databases/$(database)/documents/encounters/$(document)).data.encounter.healthWorker.uid == request.auth.uid;
      }

      allow create, update: if isLoggedIn()
        && encounterExists()
        && matchesDocumentId(request.resource, document)
        && isSelfAssigned();

      allow read: if isLoggedIn()
        && encounterExists()
        && matchesDocumentId(resource, document)
        && isSelfAssigned();
    }
  }
}
