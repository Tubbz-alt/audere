# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
opt_out_usage

default_platform(:android)

platform :android do
  desc "Build signed release aab and deploy to Internal track"
  lane :internal do
    track = "internal"
    gradle(
      task: "clean bundleRelease",
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => ENV["FEVER_SIGNING_STORE_FILE"],
        "android.injected.signing.store.password" => ENV["FEVER_SIGNING_STORE_PWD"],
        "android.injected.signing.key.alias" => ENV["FEVER_SIGNING_KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["FEVER_SIGNING_KEY_PWD"],
      }
    )
    build_number = Helper.backticks("cat ../app/version.properties | grep \"VERSION_CODE\" | cut -d'=' -f2").strip
    upload_to_play_store(
      track: track,
      json_key: "google_play_key.json",
      skip_upload_images: true,
      skip_upload_screenshots: true,
      skip_upload_metadata: true
    )
    slack_announce(
      destination: "Play Store #{track} track",
      build_number: build_number
    )
    upload_release_notes(
      track: track,
      build_number: build_number
    )
  end

  lane :upload_release_notes do |options|
    build_number = options[:build_number]
    track = options[:track]
    versions = google_play_track_version_codes(
      track: track
    )
    whats_new = "Build #{build_number}"
    metadata_dir="metadata/android/en-AU/changelogs"
    sh("mkdir -p #{metadata_dir}")
    versions.each do |version|
      sh("echo \"#{whats_new}\" > #{metadata_dir}/#{version}.txt")
      upload_to_play_store(
        # only upload the metadata, e.g. release notes
        track: track,
        json_key: "google_play_key.json",
        skip_upload_apk: true,
        skip_upload_aab: true,
        skip_upload_metadata: false,
        skip_upload_images: true,
        skip_upload_screenshots: true,
        version_code: version
      )
    end 
  end
    
  lane :slack_announce do |options|
    build_number = options[:build_number]
    destination = options[:destination]
    ENV["SLACK_URL"] = ENV["SLACK_WEBHOOK"]
    slack(
      message: "flu@home Australia build #{build_number} has been uploaded to #{destination} :rocket:",
      default_payloads: [:git_branch, :last_git_commit_hash],
      payload: {
        "Built by" => ENV["CIRCLE_USERNAME"],
        "Description" => ENV["BUILD_DESCRIPTION"],
        "Release Type" => ENV["EXPO_RELEASE_CHANNEL"],
        "Build log" => ENV["CIRCLE_BUILD_URL"]
      }
    )
  end

end
